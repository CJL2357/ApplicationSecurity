@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
}

<h1>Reset Password</h1>

<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>

    <input type="hidden" asp-for="Token" />

    <div class="mb-3">
        <label asp-for="NewPassword" class="form-label">New Password</label>
        <input asp-for="NewPassword" class="form-control" id="NewPassword" type="password" oninput="checkPasswordStrength()" /> <!-- Set type to password -->
        <span asp-validation-for="NewPassword" class="text-danger"></span>
        <span id="passwordFeedback" class="text-danger"></span> <!-- Feedback element -->
    </div>

    <div class="mb-3">
        <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" /> <!-- Set type to password -->
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Reset Password</button>
</form>

<script>
    function checkPasswordStrength() {
        const password = document.getElementById('NewPassword').value; // Update to match the input ID
        const feedback = document.getElementById('passwordFeedback');
        const strongPasswordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@\$\!%*?&])[A-Za-z\d@@\$!%*?&]{12,}$/;

        if (strongPasswordPattern.test(password)) {
            feedback.textContent = "Strong password!";
            feedback.style.color = "green";
        } else {
            feedback.textContent = "Password must be at least 12 characters long and include a mix of upper-case, lower-case, numbers, and special characters.";
            feedback.style.color = "red";
        }
    }
</script>